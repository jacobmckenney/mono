//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "passage")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: String,
    pub created_at: DateTime,
    pub updated_at: DateTime,
    pub from_verse_id: String,
    pub to_verse_id: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::comment::Entity")]
    Comment,
    #[sea_orm(has_many = "super::passage_to_prayer::Entity")]
    PassageToPrayer,
    #[sea_orm(has_many = "super::passage_to_prayer_request::Entity")]
    PassageToPrayerRequest,
    #[sea_orm(
        belongs_to = "super::verse::Entity",
        from = "Column::FromVerseId",
        to = "super::verse::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Verse2,
    #[sea_orm(
        belongs_to = "super::verse::Entity",
        from = "Column::ToVerseId",
        to = "super::verse::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Verse1,
}

impl Related<super::comment::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Comment.def()
    }
}

impl Related<super::passage_to_prayer::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PassageToPrayer.def()
    }
}

impl Related<super::passage_to_prayer_request::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PassageToPrayerRequest.def()
    }
}
