//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "passage_to_prayer")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: String,
    pub created_at: DateTime,
    pub updated_at: DateTime,
    pub passage_id: String,
    pub prayer_id: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::passage::Entity",
        from = "Column::PassageId",
        to = "super::passage::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Passage,
    #[sea_orm(
        belongs_to = "super::prayer::Entity",
        from = "Column::PrayerId",
        to = "super::prayer::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Prayer,
}

impl Related<super::passage::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Passage.def()
    }
}

impl Related<super::prayer::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Prayer.def()
    }
}
